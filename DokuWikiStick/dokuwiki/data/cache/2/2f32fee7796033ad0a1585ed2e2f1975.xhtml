
<h1 class="sectionedit1" id="项目中常见spring注解">项目中常见spring注解</h1>
<div class="level1">
<blockquote><div class="no">
这次主要介绍spring mvc中参数绑定的注解</div></blockquote>

<p>
简介：根据处理的request的不同内容部分分为四类
</p>
<ol>
<li class="level1"><div class="li">处理request body部分的注解：@RequestParam,@RequestBody;</div>
</li>
<li class="level0"><div class="li">处理requet uri 部分（这里指uri template中variable，不含queryString部分）的注解：@PathVariable;</div>
</li>
<li class="level0"><div class="li">处理request header部分的注解：@RequestHeader, @CookieValue;</div>
</li>
<li class="level0"><div class="li">处理attribute类型是注解： @SessionAttributes, @ModelAttribute;</div>
</li>
</ol>

</div>
<!-- EDIT1 SECTION "项目中常见spring注解" [0-480] -->
<h3 class="sectionedit2" id="一_requestparam">一.@RequestParam</h3>
<div class="level3">
<blockquote><div class="no">
该注解类型用于将指定的请求参数赋值给方法中的形参</div></blockquote>

<p>
@RequestParam注解支持的属性
</p>
<div class="table sectionedit3"><table class="inline">
	<tr class="row0">
		<td class="col0">属性</td><td class="col1">类型</td><td class="col2">是否必要</td><td class="col3">说明</td>
	</tr>
	<tr class="row1">
		<td class="col0">name</td><td class="col1">String</td><td class="col2">否</td><td class="col3">指定请求头绑定的名称</td>
	</tr>
	<tr class="row2">
		<td class="col0">value</td><td class="col1">String</td><td class="col2">否</td><td class="col3">name属性的别名</td>
	</tr>
	<tr class="row3">
		<td class="col0">required</td><td class="col1">Boolean</td><td class="col2">否</td><td class="col3">指示参数是否必须绑定</td>
	</tr>
	<tr class="row4">
		<td class="col0">defaultValue</td><td class="col1">String</td><td class="col2">否</td><td class="col3">如果没有传递参数而使用的默认值</td>
	</tr>
</table></div>
<!-- EDIT3 TABLE [613-862] -->
<p>
用来处理Content-Type: 为 application/x-www-form-urlencoded编码的内容，提交方式GET、POST.
该注解主要参数：value用来指定要传入值的id名称；required默认是true，表示请求中一定要有相应的参数，否则将报404错误码；default默认值，表示如果请求中没有同名参数时的默认值，默认值可以是SpEL表达式，如“#{systemProperties[&#039;java.vm.version&#039;]}”。
</p>

<p>
例：   http：<em>localhost:8080/login?username=joven&amp;password=123456
<code>@RequestMapping(“/login”)
public  ModelAndView go(@RequestParam(“username”) String username,
                        @RequestParam(“password”) String password){
        return …..;        }</code>
<br/>
<br/>
@RequestMapping(“/login”)
public  ModelAndView go(@RequestParam(“username”) String username,
                        @RequestParam(“password”) String password){
        return …..;        }
</p>

</div>
<!-- EDIT2 SECTION "一.@RequestParam" [481-] -->