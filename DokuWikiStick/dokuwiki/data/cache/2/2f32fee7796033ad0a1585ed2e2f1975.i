a:181:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:27:"项目中常见spring注解";i:1;i:1;i:2;i:0;}i:2;i:0;}i:2;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:1;}i:2;i:0;}i:3;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:19:"markdowku_headeratx";i:1;b:1;i:2;i:5;i:3;s:29:"
#项目中常见spring注解";}i:2;i:0;}i:4;a:3:{i:0;s:10:"quote_open";i:1;a:0:{}i:2;i:30;}i:5;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:52:"这次主要介绍spring mvc中参数绑定的注解";}i:2;i:30;}i:6;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:21:"markdowku_blockquotes";i:1;b:1;i:2;i:1;i:3;s:54:"
>这次主要介绍spring mvc中参数绑定的注解";}i:2;i:30;}i:7;a:3:{i:0;s:11:"quote_close";i:1;a:0:{}i:2;i:84;}i:8;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:21:"markdowku_blockquotes";i:1;b:1;i:2;i:4;i:3;s:2:"

";}i:2;i:84;}i:9;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:84;}i:10;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:64:"简介：根据处理的request的不同内容部分分为四类";}i:2;i:86;}i:11;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:150;}i:12;a:3:{i:0;s:10:"listo_open";i:1;a:0:{}i:2;i:150;}i:13;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:150;}i:14;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:150;}i:15;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:16:"markdowku_olists";i:1;b:1;i:2;i:1;i:3;s:5:"

1. ";}i:2;i:150;}i:16;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:63:"处理request body部分的注解：@RequestParam,@RequestBody;";}i:2;i:155;}i:17;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:16:"markdowku_olists";i:1;b:1;i:2;i:3;i:3;s:63:"处理request body部分的注解：@RequestParam,@RequestBody;";}i:2;i:155;}i:18;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:218;}i:19;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:218;}i:20;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:0;}i:2;i:218;}i:21;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:218;}i:22;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:16:"markdowku_olists";i:1;b:1;i:2;i:2;i:3;s:4:"
2. ";}i:2;i:218;}i:23;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:113:"处理requet uri 部分（这里指uri template中variable，不含queryString部分）的注解：@PathVariable;";}i:2;i:222;}i:24;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:16:"markdowku_olists";i:1;b:1;i:2;i:3;i:3;s:113:"处理requet uri 部分（这里指uri template中variable，不含queryString部分）的注解：@PathVariable;";}i:2;i:222;}i:25;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:335;}i:26;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:335;}i:27;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:0;}i:2;i:335;}i:28;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:335;}i:29;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:16:"markdowku_olists";i:1;b:1;i:2;i:2;i:3;s:4:"
3. ";}i:2;i:335;}i:30;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:67:"处理request header部分的注解：@RequestHeader, @CookieValue;";}i:2;i:339;}i:31;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:16:"markdowku_olists";i:1;b:1;i:2;i:3;i:3;s:67:"处理request header部分的注解：@RequestHeader, @CookieValue;";}i:2;i:339;}i:32;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:406;}i:33;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:406;}i:34;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:0;}i:2;i:406;}i:35;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:406;}i:36;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:16:"markdowku_olists";i:1;b:1;i:2;i:2;i:3;s:4:"
4. ";}i:2;i:406;}i:37;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:70:"处理attribute类型是注解： @SessionAttributes, @ModelAttribute;";}i:2;i:410;}i:38;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:16:"markdowku_olists";i:1;b:1;i:2;i:3;i:3;s:70:"处理attribute类型是注解： @SessionAttributes, @ModelAttribute;";}i:2;i:410;}i:39;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:480;}i:40;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:480;}i:41;a:3:{i:0;s:11:"listo_close";i:1;a:0:{}i:2;i:480;}i:42;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:16:"markdowku_olists";i:1;b:1;i:2;i:4;i:3;s:1:"
";}i:2;i:480;}i:43;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:480;}i:44;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:21:"注解支持的属性";}i:2;i:482;}i:45;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:503;}i:46;a:3:{i:0;s:10:"table_open";i:1;a:3:{i:0;i:4;i:1;i:5;i:2;i:504;}i:2;i:503;}i:47;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:503;}i:48;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:503;}i:49;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"属性";}i:2;i:505;}i:50;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:511;}i:51;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:511;}i:52;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"类型";}i:2;i:512;}i:53;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:518;}i:54;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:518;}i:55;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:12:"是否必要";}i:2;i:519;}i:56;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:531;}i:57;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:531;}i:58;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"说明";}i:2;i:532;}i:59;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:538;}i:60;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:539;}i:61;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:539;}i:62;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:539;}i:63;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"name";}i:2;i:541;}i:64;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:545;}i:65;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:545;}i:66;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"String";}i:2;i:546;}i:67;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:552;}i:68;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:552;}i:69;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"否";}i:2;i:553;}i:70;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:556;}i:71;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:556;}i:72;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:30:"指定请求头绑定的名称";}i:2;i:557;}i:73;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:587;}i:74;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:588;}i:75;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:588;}i:76;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:588;}i:77;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:"value";}i:2;i:590;}i:78;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:595;}i:79;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:595;}i:80;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"String";}i:2;i:596;}i:81;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:602;}i:82;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:602;}i:83;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"否";}i:2;i:603;}i:84;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:606;}i:85;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:606;}i:86;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:19:"name属性的别名";}i:2;i:607;}i:87;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:626;}i:88;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:627;}i:89;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:627;}i:90;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:627;}i:91;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:"required";}i:2;i:629;}i:92;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:637;}i:93;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:637;}i:94;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"Boolean";}i:2;i:638;}i:95;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:645;}i:96;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:645;}i:97;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"否";}i:2;i:646;}i:98;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:649;}i:99;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:649;}i:100;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:30:"指示参数是否必须绑定";}i:2;i:650;}i:101;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:680;}i:102;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:681;}i:103;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:681;}i:104;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:681;}i:105;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:12:"defaultValue";}i:2;i:683;}i:106;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:695;}i:107;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:695;}i:108;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"String";}i:2;i:696;}i:109;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:702;}i:110;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:702;}i:111;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"否";}i:2;i:703;}i:112;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:706;}i:113;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:706;}i:114;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:45:"如果没有传递参数而使用的默认值";}i:2;i:707;}i:115;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:752;}i:116;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:753;}i:117;a:3:{i:0;s:11:"table_close";i:1;a:1:{i:0;i:753;}i:2;i:753;}i:118;a:3:{i:0;s:2:"hr";i:1;a:0:{}i:2;i:754;}i:119;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:12:"markdowku_hr";i:1;b:1;i:2;i:5;i:3;s:4:"
---";}i:2;i:754;}i:120;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:759;}i:121;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:17:"一.@RequestParam";i:1;i:3;i:2;i:759;}i:2;i:759;}i:122;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:759;}i:123;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:19:"markdowku_headeratx";i:1;b:1;i:2;i:5;i:3;s:21:"
###一.@RequestParam";}i:2;i:759;}i:124;a:3:{i:0;s:10:"quote_open";i:1;a:0:{}i:2;i:780;}i:125;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:72:"该注解类型用于将指定的请求参数赋值给方法中的形参";}i:2;i:780;}i:126;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:21:"markdowku_blockquotes";i:1;b:1;i:2;i:1;i:3;s:74:"
>该注解类型用于将指定的请求参数赋值给方法中的形参";}i:2;i:780;}i:127;a:3:{i:0;s:11:"quote_close";i:1;a:0:{}i:2;i:854;}i:128;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:21:"markdowku_blockquotes";i:1;b:1;i:2;i:4;i:3;s:2:"

";}i:2;i:854;}i:129;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:854;}i:130;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:441:"@RequestParam用来处理Content-Type: 为 application/x-www-form-urlencoded编码的内容，提交方式GET、POST.
该注解主要参数：value用来指定要传入值的id名称；required默认是true，表示请求中一定要有相应的参数，否则将报404错误码；default默认值，表示如果请求中没有同名参数时的默认值，默认值可以是SpEL表达式，如“#{systemProperties['java.vm.version']}”。";}i:2;i:856;}i:131;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1297;}i:132;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1297;}i:133;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"例：";}i:2;i:1299;}i:134;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:58:"http://localhost:8080/login?username=joven&password=123456";i:1;N;}i:2;i:1305;}i:135;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1363;}i:136;a:3:{i:0;s:4:"file";i:1;a:3:{i:0;s:218:"
@RequestMapping("/login")
public  ModelAndView go(@RequestParam("username") String username,
                        @RequestParam("password") String password){                        
        return .....;        
}
";i:1;s:4:"java";i:2;s:12:"snippet.java";}i:2;i:1366;}i:137;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:26:"markdowku_githubcodeblocks";i:1;b:1;i:2;i:5;i:3;s:229:"
```java
@RequestMapping("/login")
public  ModelAndView go(@RequestParam("username") String username,
                        @RequestParam("password") String password){                        
        return .....;        
}
```";}i:2;i:1366;}i:138;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1366;}i:139;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:51:"以上代码会将请求中的loginname参数的值";}i:2;i:1596;}i:140;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:1647;}i:141;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:"joven";}i:2;i:1648;}i:142;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:1653;}i:143;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:44:"赋给loginname变量，password参数的值";}i:2;i:1654;}i:144;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:1698;}i:145;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"123456";}i:2;i:1699;}i:146;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:1705;}i:147;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:20:"赋给password变量";}i:2;i:1706;}i:148;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1727;}i:149;a:3:{i:0;s:2:"hr";i:1;a:0:{}i:2;i:1727;}i:150;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:12:"markdowku_hr";i:1;b:1;i:2;i:5;i:3;s:4:"
---";}i:2;i:1727;}i:151;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:1732;}i:152;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:12:"@RequestBody";i:1;i:3;i:2;i:1732;}i:2;i:1732;}i:153;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:1732;}i:154;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:19:"markdowku_headeratx";i:1;b:1;i:2;i:5;i:3;s:16:"
###@RequestBody";}i:2;i:1732;}i:155;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1732;}i:156;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:140:"该注解常用来处理Content-Type: 不是application/x-www-form-urlencoded编码的内容，例如application/json, application/xml等；";}i:2;i:1749;}i:157;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1890;}i:158;a:3:{i:0;s:4:"file";i:1;a:3:{i:0;s:319:"
$.ajax({  
    type: "post",  
    contentType:"application/json",  
    url: "repairs/saveDispatches",  
    data: JSON.stringify(dispatchesDTO),  
    success: function(data){  
        if(!data.success){  
          alertError("派工失败");  
        }else{  
        alertSuccess("派工成功");  
    }  
}) 
";i:1;s:4:"java";i:2;s:12:"snippet.java";}i:2;i:1890;}i:159;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:26:"markdowku_githubcodeblocks";i:1;b:1;i:2;i:5;i:3;s:330:"
```java
$.ajax({  
    type: "post",  
    contentType:"application/json",  
    url: "repairs/saveDispatches",  
    data: JSON.stringify(dispatchesDTO),  
    success: function(data){  
        if(!data.success){  
          alertError("派工失败");  
        }else{  
        alertSuccess("派工成功");  
    }  
}) 
```";}i:2;i:1890;}i:160;a:3:{i:0;s:4:"file";i:1;a:3:{i:0;s:265:"
@RequestMapping(value="/saveUser",method=RequestMethod.POST) 
@ResponseBody  
public void saveUser(@RequestBody List<User> users,@RequestBody DispatchesDTO dispatchesDTO,) { 
   userService.batchSave(users); 
   dispatchesService.saveDispatches(dispatchesDTO);
} 
";i:1;s:4:"java";i:2;s:12:"snippet.java";}i:2;i:2222;}i:161;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:26:"markdowku_githubcodeblocks";i:1;b:1;i:2;i:5;i:3;s:276:"
```java
@RequestMapping(value="/saveUser",method=RequestMethod.POST) 
@ResponseBody  
public void saveUser(@RequestBody List<User> users,@RequestBody DispatchesDTO dispatchesDTO,) { 
   userService.batchSave(users); 
   dispatchesService.saveDispatches(dispatchesDTO);
} 
```";}i:2;i:2222;}i:162;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2222;}i:163;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:265:"其实 @RequestBody接收的是一个Json对象的字符串，而不是一个Json对象。然而在ajax请求往往传的都是Json对象，后来发现用 JSON.stringify(data)的方式就能将对象变成字符串。同时ajax请求的时候也要指定dataType: ";}i:2;i:2500;}i:164;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:2765;}i:165;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"json";}i:2;i:2766;}i:166;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:2770;}i:167;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:",contentType:";}i:2;i:2771;}i:168;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:2784;}i:169;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:16:"application/json";}i:2;i:2785;}i:170;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:2801;}i:171;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:113:" 这样就可以轻易的将一个对象或者List传到Java端，使用@RequestBody即可绑定对象或者List.";}i:2;i:2802;}i:172;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2916;}i:173;a:3:{i:0;s:2:"hr";i:1;a:0:{}i:2;i:2916;}i:174;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:12:"markdowku_hr";i:1;b:1;i:2;i:5;i:3;s:4:"
---";}i:2;i:2916;}i:175;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:2921;}i:176;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:13:"@PathVariable";i:1;i:3;i:2;i:2921;}i:2;i:2921;}i:177;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:2921;}i:178;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:19:"markdowku_headeratx";i:1;b:1;i:2;i:5;i:3;s:17:"
###@PathVariable";}i:2;i:2921;}i:179;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:2938;}i:180;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:2938;}}