a:37:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:24:"数据接口顺序服务";i:1;i:2;i:2;i:0;}i:2;i:0;}i:2;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:0;}i:3;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:19:"markdowku_headeratx";i:1;b:1;i:2;i:5;i:3;s:28:"
## 数据接口顺序服务";}i:2;i:0;}i:4;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:28;}i:5;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:28;}i:6;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:28;}i:7;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:16:"markdowku_ulists";i:1;b:1;i:2;i:1;i:3;s:4:"

* ";}i:2;i:28;}i:8;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:46:"RegistryController 正常的增删改查管理";}i:2;i:32;}i:9;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:16:"markdowku_ulists";i:1;b:1;i:2;i:3;i:3;s:46:"RegistryController 正常的增删改查管理";}i:2;i:32;}i:10;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:78;}i:11;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:78;}i:12;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:78;}i:13;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:78;}i:14;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:16:"markdowku_ulists";i:1;b:1;i:2;i:2;i:3;s:3:"
* ";}i:2;i:78;}i:15;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:171:"UpdateServiceOrderInterceptor 当对数据接口顺序服务进行了修改以后，在这个方法中使用aop对于内存中存储的数据接口服务顺序进行更新";}i:2;i:81;}i:16;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:16:"markdowku_ulists";i:1;b:1;i:2;i:3;i:3;s:171:"UpdateServiceOrderInterceptor 当对数据接口顺序服务进行了修改以后，在这个方法中使用aop对于内存中存储的数据接口服务顺序进行更新";}i:2;i:81;}i:17;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:252;}i:18;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:252;}i:19;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:252;}i:20;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:252;}i:21;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:16:"markdowku_ulists";i:1;b:1;i:2;i:2;i:3;s:3:"
* ";}i:2;i:252;}i:22;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:198:"数据接口顺序服务是在数据处理引擎获取的时候进行动态判断的；根据预定义的数据接口服务顺序实体判断是返回那一个对应的数据查询和解析实体；";}i:2;i:255;}i:23;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:16:"markdowku_ulists";i:1;b:1;i:2;i:3;i:3;s:198:"数据接口顺序服务是在数据处理引擎获取的时候进行动态判断的；根据预定义的数据接口服务顺序实体判断是返回那一个对应的数据查询和解析实体；";}i:2;i:255;}i:24;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:453;}i:25;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:453;}i:26;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:453;}i:27;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:453;}i:28;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:16:"markdowku_ulists";i:1;b:1;i:2;i:2;i:3;s:3:"
* ";}i:2;i:453;}i:29;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:123:"对于没有定义数据服务接口顺序的，则按照spring容器加载的顺序取第一个返回；这个不可控；";}i:2;i:456;}i:30;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:16:"markdowku_ulists";i:1;b:1;i:2;i:3;i:3;s:123:"对于没有定义数据服务接口顺序的，则按照spring容器加载的顺序取第一个返回；这个不可控；";}i:2;i:456;}i:31;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"
";}i:2;i:579;}i:32;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:579;}i:33;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:579;}i:34;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:579;}i:35;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:579;}i:36;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:579;}}