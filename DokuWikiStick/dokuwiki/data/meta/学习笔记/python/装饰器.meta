a:2:{s:7:"current";a:8:{s:4:"date";a:2:{s:7:"created";i:1511229519;s:8:"modified";i:1511229519;}s:7:"creator";s:6:"gonglc";s:4:"user";s:6:"gonglc";s:11:"last_change";a:8:{s:4:"date";i:1511229519;s:2:"ip";s:13:"192.168.5.102";s:4:"type";s:1:"C";s:2:"id";s:29:"学习笔记:python:装饰器";s:4:"user";s:6:"gonglc";s:3:"sum";s:6:"创建";s:5:"extra";s:0:"";s:10:"sizechange";i:5422;}s:5:"title";s:63:"理解装饰器需要恶补的几个关于python方法的知识";s:11:"description";a:2:{s:15:"tableofcontents";a:14:{i:0;a:4:{s:3:"hid";s:63:"理解装饰器需要恶补的几个关于python方法的知识";s:5:"title";s:63:"理解装饰器需要恶补的几个关于python方法的知识";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:1;a:4:{s:3:"hid";s:18:"多名字的方法";s:5:"title";s:20:"1.多名字的方法";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:2;a:4:{s:3:"hid";s:21:"方法中定义方法";s:5:"title";s:24:"2. 方法中定义方法";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:3;a:4:{s:3:"hid";s:18:"方法作为参数";s:5:"title";s:20:"3.方法作为参数";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:4;a:4:{s:3:"hid";s:30:"将方法作为返回值返回";s:5:"title";s:32:"4.将方法作为返回值返回";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:5;a:4:{s:3:"hid";s:24:"一个简单的装饰器";s:5:"title";s:24:"一个简单的装饰器";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:6;a:4:{s:3:"hid";s:28:"用_改造上面的装饰器";s:5:"title";s:28:"用@改造上面的装饰器";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:7;a:4:{s:3:"hid";s:18:"多参数的处理";s:5:"title";s:18:"多参数的处理";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:8;a:4:{s:3:"hid";s:21:"带参数的装饰器";s:5:"title";s:21:"带参数的装饰器";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:9;a:4:{s:3:"hid";s:31:"functools_中的_wraps的使用";s:5:"title";s:31:"functools 中的@wraps的使用";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:10;a:4:{s:3:"hid";s:15:"类的装饰器";s:5:"title";s:15:"类的装饰器";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:11;a:4:{s:3:"hid";s:11:"call_方法";s:5:"title";s:18:"1.`__call__`方法";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:12;a:4:{s:3:"hid";s:39:"用类装饰器来重写一次装饰器";s:5:"title";s:41:"2.用类装饰器来重写一次装饰器";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:13;a:4:{s:3:"hid";s:10:"参考link";s:5:"title";s:10:"参考link";s:4:"type";s:2:"ul";s:5:"level";i:2;}}s:8:"abstract";s:388:""本篇介绍python中的装饰器"

python中有两类装饰器：

	* 方法装饰器
	* 类装饰器

python中的装饰器是任何可以调用的python object，他们能改变方法和类；将一个方法或者一个类的引用传给装饰器，然后返回一个改变过的方法或类；当然，这个改变的方法或者类中常常包含了对原来方法或类的调用；";}s:8:"internal";a:2:{s:5:"cache";b:1;s:3:"toc";b:1;}s:8:"relation";a:1:{s:10:"firstimage";s:0:"";}}s:10:"persistent";a:4:{s:4:"date";a:1:{s:7:"created";i:1511229519;}s:7:"creator";s:6:"gonglc";s:4:"user";s:6:"gonglc";s:11:"last_change";a:8:{s:4:"date";i:1511229519;s:2:"ip";s:13:"192.168.5.102";s:4:"type";s:1:"C";s:2:"id";s:29:"学习笔记:python:装饰器";s:4:"user";s:6:"gonglc";s:3:"sum";s:6:"创建";s:5:"extra";s:0:"";s:10:"sizechange";i:5422;}}}