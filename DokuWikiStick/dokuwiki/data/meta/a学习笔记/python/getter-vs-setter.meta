a:2:{s:7:"current";a:9:{s:4:"date";a:2:{s:7:"created";i:1511246550;s:8:"modified";i:1511246737;}s:7:"creator";s:6:"gonglc";s:4:"user";s:6:"gonglc";s:11:"last_change";a:8:{s:4:"date";i:1511246737;s:2:"ip";s:13:"192.168.5.102";s:4:"type";s:1:"E";s:2:"id";s:37:"a学习笔记:python:getter-vs-setter";s:4:"user";s:6:"gonglc";s:3:"sum";s:23:"[python中的property] ";s:5:"extra";s:0:"";s:10:"sizechange";i:10;}s:5:"title";s:6:"问题";s:11:"description";a:2:{s:15:"tableofcontents";a:4:{i:0;a:4:{s:3:"hid";s:6:"问题";s:5:"title";s:6:"问题";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:1;a:4:{s:3:"hid";s:20:"python中的property";s:5:"title";s:20:"python中的property";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:2;a:4:{s:3:"hid";s:15:"完整的例子";s:5:"title";s:15:"完整的例子";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:3;a:4:{s:3:"hid";s:12:"参考链接";s:5:"title";s:12:"参考链接";s:4:"type";s:2:"ul";s:5:"level";i:2;}}s:8:"abstract";s:276:""本篇介绍python中的getter和setter"

面向对象的语言中我们强调对数据的封装，我们希望属性是private的，这样我们只能通过getter和setter对数据进行存取,既保证了数据的封装，又能后期方便的对存取逻辑进行修改；";}s:8:"internal";a:2:{s:5:"cache";b:1;s:3:"toc";b:1;}s:8:"relation";a:1:{s:10:"firstimage";s:0:"";}s:11:"contributor";a:1:{s:6:"gonglc";s:6:"gonglc";}}s:10:"persistent";a:5:{s:4:"date";a:2:{s:7:"created";i:1511246550;s:8:"modified";i:1511246737;}s:7:"creator";s:6:"gonglc";s:4:"user";s:6:"gonglc";s:11:"last_change";a:8:{s:4:"date";i:1511246737;s:2:"ip";s:13:"192.168.5.102";s:4:"type";s:1:"E";s:2:"id";s:37:"a学习笔记:python:getter-vs-setter";s:4:"user";s:6:"gonglc";s:3:"sum";s:23:"[python中的property] ";s:5:"extra";s:0:"";s:10:"sizechange";i:10;}s:11:"contributor";a:1:{s:6:"gonglc";s:6:"gonglc";}}}